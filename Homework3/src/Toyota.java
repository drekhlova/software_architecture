public class Toyota extends Car {

    public Toyota(String model, String color, String exter, String fluel_type, String control, int num_wheels, double vol_eng) {
        super("Toyota", model, color, exter, fluel_type, control, num_wheels, vol_eng);
        self.is_vecsicale = true;
    }

    public void isLight_on(boolean is_light) {
        is_light = true;
    }
}

//    Создать конкретный автомобиль путём наследования класса «Car», определить метод «движение» - «полёт». Провести проверку принципа LSP.
//        7. Создать интерфейс «Заправочная станция», создать метод: заправка топливом.
//        8. Имплементировать метод интерфейса «Заправочная станция» в конкретный класс «Car».
//        9. Добавить в интерфейс «Заправочная станция» методы: протирка лобового стекла, протирка фар, протирка зеркал.
//        10. Имплементировать все методы интерфейса «Заправочная станция» в конкретный класс «Car». Провести проверку принципа ISP. Создать дополнительный/е интерфейсы и имплементировать их в конкретный класс «Car». Провести проверку принципа ISP.
//        11. Создать путём наследования класса «Car» два автомобиля: с бензиновым и дизельным двигателями, имплементировать метод «Заправка топливом» интерфейса «Заправочная станция». Реализовать заправку каждого автомобиля подходящим топливом. Провести проверку принципа DIP.
